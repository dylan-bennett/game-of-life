// =============================================================================
// SASS Variables
// =============================================================================

// Color palette
$colors: (
  primary: #007bff,
  primary-hover: #0056b3,
  success: #28a745,
  success-hover: #1e7e34,
  neutral: (
    white: #ffffff,
    gray-50: #f8f9fa,
    gray-100: #f5f5f5,
    gray-200: #e9ecef,
    gray-300: #ddd,
    gray-400: #ccc,
    gray-500: #bbb,
    gray-600: #666,
    gray-700: #555,
    gray-800: #333,
    gray-900: #1a1a1a,
  ),
  dark: (
    bg-primary: #2d2d2d,
    bg-secondary: #3a3a3a,
    bg-tertiary: #4a4a4a,
    bg-quaternary: #5a5a5a,
    text: #e0e0e0,
    border: #555,
    border-light: #666,
  ),
);

// Spacing scale
$spacing: (
  xs: 0.25rem,
  sm: 0.5rem,
  md: 0.75rem,
  lg: 1rem,
  xl: 1.5rem,
  2xl: 2rem,
);

// Typography
$font-sizes: (
  xs: 0.7rem,
  sm: 0.75rem,
  base: 0.875rem,
  lg: 1rem,
  xl: 1.25rem,
  2xl: 1.5rem,
  3xl: 2rem,
  4xl: 2.5rem,
);

$font-weights: (
  normal: 400,
  medium: 500,
  semibold: 600,
);

// Breakpoints
$breakpoints: (
  sm: 480px,
  md: 768px,
  lg: 1024px,
  xl: 1200px,
);

// Component sizes
$sizes: (
  header-height: 50px,
  footer-height: 60px,
  sidebar-width: 320px,
  button-height: 44px,
  button-height-mobile: 40px,
  border-radius: 4px,
  border-radius-lg: 8px,
  border-radius-xl: 12px,
);

// =============================================================================
// SASS Functions
// =============================================================================

@function color($color-key, $variant: null) {
  @if $variant {
    @return map-get(map-get($colors, $color-key), $variant);
  }
  @return map-get($colors, $color-key);
}

@function spacing($size) {
  @return map-get($spacing, $size);
}

@function font-size($size) {
  @return map-get($font-sizes, $size);
}

@function font-weight($weight) {
  @return map-get($font-weights, $weight);
}

@function breakpoint($size) {
  @return map-get($breakpoints, $size);
}

@function size($key) {
  @return map-get($sizes, $key);
}

// =============================================================================
// SASS Mixins
// =============================================================================

// Responsive mixins
@mixin respond-above($breakpoint) {
  @media (min-width: #{breakpoint($breakpoint)}) {
    @content;
  }
}

@mixin respond-below($breakpoint) {
  @media (max-width: #{breakpoint($breakpoint) - 1px}) {
    @content;
  }
}

// Button mixin
@mixin button-base($height: null) {
  @if $height == null {
    $height: size(button-height);
  }

  padding: spacing(sm) spacing(lg);
  border: 1px solid color(neutral, gray-300);
  border-radius: size(border-radius-lg);
  background: color(neutral, white);
  color: color(neutral, gray-800);
  font-size: font-size(base);
  font-weight: font-weight(medium);
  cursor: pointer;
  transition: all 0.2s ease;
  min-height: $height;
  min-width: 80px;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: color(neutral, gray-50);
    border-color: color(neutral, gray-500);
  }

  &:active {
    transform: translateY(1px);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  @include respond-below(md) {
    min-height: size(button-height-mobile);
    padding: spacing(xs) spacing(md);
    font-size: font-size(sm);
  }
}

@mixin button-variant($bg-color, $hover-color) {
  background: $bg-color;
  color: color(neutral, white);
  border-color: $bg-color;

  &:hover {
    background: $hover-color;
    border-color: $hover-color;
  }
}

// Dark mode mixin
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// =============================================================================
// Base Styles
// =============================================================================

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: color(neutral, gray-100);
  overflow: hidden; // Prevent body scroll since we want app to fill viewport

  @include dark-mode {
    background-color: color(dark, bg-primary);
    color: color(dark, text);
  }
}

// =============================================================================
// Main App Layout
// =============================================================================

.app-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  height: 100dvh; // Use dynamic viewport height for better mobile support
  width: 100vw;
  background: color(neutral, white);

  @include dark-mode {
    background: color(dark, bg-primary);
    color: color(dark, text);
  }

  // Fallback for mobile browsers that don't support dvh
  @supports not (height: 100dvh) {
    @media screen and (max-width: 768px) {
      height: calc(100vh - env(keyboard-inset-height, 0px));
      min-height: -webkit-fill-available; // Safari iOS fallback
    }
  }
}

// =============================================================================
// Header
// =============================================================================

.app-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: spacing(sm) spacing(lg);
  height: size(header-height);
  background: color(neutral, white);
  border-bottom: 1px solid color(neutral, gray-200);
  flex-shrink: 0;

  @include respond-below(md) {
    padding: spacing(xs) spacing(md);
    height: auto;
    min-height: size(header-height);
  }

  @include dark-mode {
    background: color(dark, bg-secondary);
    border-bottom-color: color(dark, border);
  }
}

.app-title {
  font-size: font-size(xl);
  color: color(neutral, gray-800);
  margin: 0;
  font-weight: font-weight(semibold);

  @include respond-below(md) {
    font-size: font-size(lg);
  }

  @include respond-below(sm) {
    font-size: font-size(base);
  }

  @include dark-mode {
    color: color(dark, text);
  }
}

.sidebar-toggle {
  @include button-base();
  min-width: auto;
  padding: spacing(xs);
  min-height: 36px;

  @include respond-below(md) {
    padding: spacing(xs);
    min-height: 32px;
  }

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

// Customize button specific styles
.customize-button {
  gap: spacing(xs);
  font-weight: font-weight(semibold);
  position: relative;
  overflow: hidden;
  padding: spacing(sm) spacing(lg);
  min-width: auto;

  // Subtle pulse animation to draw attention
  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transform: translateX(-100%);
    animation: shimmer 3s infinite;
    z-index: 1;
  }

  .customize-text {
    position: relative;
    z-index: 2;
    font-size: font-size(sm);

    @include respond-below(sm) {
      display: none; // Hide text on very small screens, show only icon
    }
  }

  svg {
    position: relative;
    z-index: 2;
  }

  @include respond-below(md) {
    padding: spacing(xs) spacing(md);
    gap: spacing(xs);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

// =============================================================================
// Main Content Area
// =============================================================================

.app-main {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: color(neutral, gray-50);
  overflow: hidden;
  // Ensure main content doesn't overflow on mobile
  min-height: 0;

  @include respond-below(md) {
    // On mobile, ensure we don't take more space than available
    flex: 1 1 auto;
  }

  @include dark-mode {
    background: color(dark, bg-primary);
  }
}

.grid-container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.game-grid {
  border-radius: 0;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);

  // Ensure crisp pixel rendering for the canvas
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;

  &:hover {
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
  }

  @include dark-mode {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);

    &:hover {
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);
    }
  }

  // Touch-friendly interactions
  @media (hover: none) and (pointer: coarse) {
    &:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-overflow-scrolling: touch;
  }
}

// =============================================================================
// Footer
// =============================================================================

.app-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: spacing(sm) spacing(lg);
  height: size(footer-height);
  background: color(neutral, white);
  border-top: 1px solid color(neutral, gray-200);
  flex-shrink: 0;

  @include respond-below(md) {
    padding: spacing(xs) spacing(md);
    height: auto;
    min-height: size(footer-height);
    // Ensure footer is always visible on mobile
    position: relative;
    z-index: 10;
    // Add safe area padding for mobile devices with notches
    padding-bottom: max(spacing(xs), env(safe-area-inset-bottom));
  }

  @include dark-mode {
    background: color(dark, bg-secondary);
    border-top-color: color(dark, border);
  }
}

.footer-button {
  @include button-base();

  @include respond-below(md) {
    min-width: 70px;
    padding: spacing(xs) spacing(sm);
  }

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

.footer-center {
  display: flex;
  gap: spacing(sm);
  align-items: center;
}

// Random dropdown styles
.random-dropdown {
  position: relative;
}

.random-button {
  display: flex;
  align-items: center;
  gap: spacing(xs);
}

.dropdown-arrow {
  font-size: font-size(xs);
  transition: transform 0.2s ease;

  &.open {
    transform: rotate(180deg);
  }
}

.dropdown-menu {
  position: absolute;
  bottom: 100%;
  right: 0;
  background: color(neutral, white);
  border: 1px solid color(neutral, gray-300);
  border-radius: size(border-radius);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  margin-bottom: spacing(xs);
  z-index: 1000;
  min-width: 140px;

  @include dark-mode {
    background: color(dark, bg-tertiary);
    border-color: color(dark, border);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
}

.dropdown-item {
  display: block;
  width: 100%;
  padding: spacing(sm) spacing(md);
  border: none;
  background: none;
  color: color(neutral, gray-800);
  font-size: font-size(sm);
  text-align: left;
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:first-child {
    border-radius: size(border-radius) size(border-radius) 0 0;
  }

  &:last-child {
    border-radius: 0 0 size(border-radius) size(border-radius);
  }

  &:only-child {
    border-radius: size(border-radius);
  }

  &:hover {
    background: color(neutral, gray-50);
  }

  @include dark-mode {
    color: color(dark, text);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

// =============================================================================
// Sidebar
// =============================================================================

.sidebar {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  height: 100dvh; // Use dynamic viewport height for better mobile support
  width: size(sidebar-width);
  background: color(neutral, white);
  box-shadow: -4px 0 12px rgba(0, 0, 0, 0.15);
  transform: translateX(100%);
  transition: transform 0.3s ease;
  z-index: 1000;
  overflow-y: auto;

  @include respond-below(md) {
    width: 100vw;
    box-shadow: 0 0 12px rgba(0, 0, 0, 0.15);
  }

  // Fallback for mobile browsers that don't support dvh
  @supports not (height: 100dvh) {
    @media screen and (max-width: 768px) {
      height: calc(100vh - env(keyboard-inset-height, 0px));
      min-height: -webkit-fill-available; // Safari iOS fallback
    }
  }

  @include dark-mode {
    background: color(dark, bg-secondary);
    box-shadow: -4px 0 12px rgba(0, 0, 0, 0.3);

    @include respond-below(md) {
      box-shadow: 0 0 12px rgba(0, 0, 0, 0.3);
    }
  }

  &.sidebar-open {
    transform: translateX(0);
  }
}

.sidebar-content {
  padding: spacing(xl);
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: spacing(xl);
  min-height: 0; // Allow content to shrink if needed

  @include respond-below(md) {
    padding: spacing(lg);
    gap: spacing(lg);
    // Add safe area padding for mobile devices with notches
    padding-bottom: max(spacing(lg), env(safe-area-inset-bottom));
  }
}

.sidebar-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: spacing(md);
  border-bottom: 1px solid color(neutral, gray-200);

  h3 {
    margin: 0;
    font-size: font-size(xl);
    font-weight: font-weight(semibold);
    color: color(neutral, gray-800);

    @include dark-mode {
      color: color(dark, text);
    }
  }

  @include dark-mode {
    border-bottom-color: color(dark, border);
  }
}

.sidebar-close {
  @include button-base();
  min-width: auto;
  padding: spacing(xs);

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

.sidebar-section {
  display: flex;
  flex-direction: column;
  gap: spacing(sm);
}

.sidebar-section-title {
  font-size: font-size(base);
  font-weight: font-weight(semibold);
  color: color(neutral, gray-800);
  margin: 0;

  @include dark-mode {
    color: color(dark, text);
  }
}

.sidebar-label {
  font-size: font-size(sm);
  color: color(neutral, gray-600);
  margin: 0;

  @include dark-mode {
    color: color(dark, text);
  }
}

.sidebar-slider {
  width: 100%;
  height: 6px;
  border-radius: 3px;
  background: color(neutral, gray-300);
  outline: none;
  cursor: pointer;

  @include dark-mode {
    background: color(dark, bg-tertiary);
  }

  &::-webkit-slider-thumb {
    appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: color(primary);
    cursor: pointer;
    border: 2px solid color(neutral, white);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

    @include dark-mode {
      background: color(dark, text);
      border-color: color(dark, bg-primary);
    }
  }

  &::-moz-range-thumb {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: color(primary);
    cursor: pointer;
    border: 2px solid color(neutral, white);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

    @include dark-mode {
      background: color(dark, text);
      border-color: color(dark, bg-primary);
    }
  }
}

.sidebar-select {
  width: 100%;
  padding: spacing(sm) spacing(md);
  border: 1px solid color(neutral, gray-300);
  border-radius: size(border-radius);
  background: color(neutral, white);
  color: color(neutral, gray-800);
  font-size: font-size(base);
  font-weight: font-weight(medium);
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    border-color: color(neutral, gray-500);
  }

  &:focus {
    outline: none;
    border-color: color(primary);
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
  }

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      border-color: color(dark, text);
    }

    &:focus {
      border-color: color(dark, text);
      box-shadow: 0 0 0 2px rgba(224, 224, 224, 0.25);
    }
  }
}

.sidebar-button-group {
  display: flex;
  gap: spacing(xs);
  flex-wrap: wrap;
}

.sidebar-color-button {
  @include button-base();
  flex: 1;
  min-width: 0;

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

.sidebar-footer {
  margin-top: auto;
  padding-top: spacing(lg);
  flex-shrink: 0; // Ensure footer doesn't shrink and always stays visible

  @include respond-below(md) {
    // Ensure extra padding on mobile to prevent cutoff
    padding-top: spacing(xl);
  }
}

.sidebar-reset {
  @include button-base();
  width: 100%;
  margin-bottom: spacing(md);

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}

.sidebar-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  cursor: pointer;
}

// =============================================================================
// Rules Control (Compact for Sidebar)
// =============================================================================

.rules-control {
  display: flex;
  flex-direction: column;
  gap: spacing(md);
}

.rules-stage-compact {
  display: flex;
  flex-direction: column;
  gap: spacing(xs);
  padding: spacing(sm);
  background: color(neutral, gray-50);
  border-radius: size(border-radius);
  border: 1px solid color(neutral, gray-200);

  @include dark-mode {
    background: color(dark, bg-tertiary);
    border-color: color(dark, border);
  }
}

.stage-header-compact {
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  color: color(neutral, gray-700);
  margin-bottom: spacing(xs);

  @include dark-mode {
    color: color(dark, text);
  }
}

.rules-buttons-compact {
  display: grid;
  grid-template-columns: repeat(9, 1fr);
  gap: 2px;
}

.rule-button-compact {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2px;
  border: 1px solid color(neutral, gray-400);
  border-radius: size(border-radius);
  cursor: pointer;
  font-size: font-size(xs);
  min-height: 32px;
  transition: all 0.2s ease;

  @include respond-below(md) {
    min-height: 28px;
    font-size: 10px;
  }

  @include dark-mode {
    background: color(dark, bg-quaternary);
    border-color: color(dark, border-light);
  }

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(0);
  }
}

.neighbor-count-compact {
  font-weight: font-weight(semibold);
  line-height: 1;
}

.rule-icon-compact {
  font-size: font-size(xs);
  line-height: 1;

  svg {
    width: 8px;
    height: 8px;
  }
}

// =============================================================================
// Button Styles
// =============================================================================

.app-button {
  @include button-base();

  &.primary {
    @include button-variant(color(primary), color(primary-hover));
  }

  &.success {
    @include button-variant(color(success), color(success-hover));
  }

  @include dark-mode {
    background: color(dark, bg-tertiary);
    color: color(dark, text);
    border-color: color(dark, border-light);

    &:hover {
      background: color(dark, bg-quaternary);
    }
  }
}
